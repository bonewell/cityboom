@startuml
namespace CityBoom {
    class Game {
        - world: WorldProtocol
        - intellect: IntellectProtocol
        - chain: ChainProtocol
        + init(world, intellect, chain)
        + go(): (Bool, String)
        + examine(name: String): (Bool, String)
    }
    interface WorldProtocol {
        + isCity(name: String): Bool
        + find(name: String): City
        + random(): City
        + getByFirstLetter(letter: Character): Set<City>
    }
    interface IntellectProtocol {
        + play(chain: Chain): City
    }
    interface ChainProtocol {
        + isUsed(city: City): Bool
        + last(): City
        + all(): Set<City>
    }
    class World {
        - cities: [String: City]
        + init(cities: [String: City])
    }
    class Intellect {
        - world: WorldProtocol
        + init(world)
    }
    class Chain {
        - lastId: Int
        - cities: [Int, City]
        + init()
        + init(cities: [Int, City], last: Int)

    }
    class StitchInspector {
        {static} + verify(last: City, next: City): Bool
    }
    class City << (S,skyblue) >> {
        + id: Int
        + name: String
        + init(id: Int, name: String)
    }
    class WorldStorage {
        {static} + read(text: String): [String: City]
    }

    Game o-- "1" WorldProtocol
    Game o-- "1" IntellectProtocol
    Game o-- "1" ChainProtocol
    WorldProtocol <|.. World
    IntellectProtocol <|.. Intellect
    ChainProtocol <|.. Chain
    World -o Intellect
    Intellect .> Chain
    World *-- "1..*" City
    Chain *-- "0..*" City
    Game .> StitchInspector
    WorldStorage .> City: create
'    City <.. WorldStorage: create
}
@enduml
