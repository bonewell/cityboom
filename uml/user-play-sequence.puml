@startuml
actor User
User -> CityBoom: input name
activate CityBoom
CityBoom -> Game: examine(name)
activate Game
Game -> World: find(name)
activate World
World --> Game: city
deactivate World
opt city is nil
    Game --> CityBoom: false, city doesn't exist
    CityBoom --> User: city doesn't exist
end
Game -> Chain: isUsed(city)
activate Chain
Chain --> Game: result
deactivate Chain
opt result is true
    Game --> CityBoom: false, city is already used
    CityBoom --> User: city is already used
end
Game -> Chain: last()
activate Chain
Chain --> Game: last
deactivate Chain
Game -> StitchInspector: verify(last, city)
activate StitchInspector
StitchInspector --> Game: result
deactivate StitchInspector
opt result is false
    Game --> CityBoom: false, city is unsuited
    CityBoom --> User: city is unsuited
end
Game -> Chain: add(city)
Game --> CityBoom: city
deactivate Game
CityBoom --> User
deactivate CityBoom
@enduml